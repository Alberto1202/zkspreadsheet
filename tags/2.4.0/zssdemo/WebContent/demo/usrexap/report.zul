<?xml version="1.0" encoding="UTF-8"?>

<!--
report.zul

{{IS_NOTE
	Purpose:
		
	Description:
		
	History:
		Tue May  27 09:16:33     2008, Created by ivancheng
}}IS_NOTE

Copyright (C) 2008 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
}}IS_RIGHT
-->
<window id="demo" width="100%">
	<vbox width="100%"  align="stretch">
		<html><![CDATA[
			<h4>Generate Report</h4>
			<p>Click the button and 500 data will be generated with ZK Spreadsheet.</p>
		]]></html>
		<groupbox mold="3d" width="100%">
			<caption label="View"><button label="Reload" height="18px" use="org.zkoss.zss.demo.ReloadButton"/></caption>
			<window id="view">
			</window>
		</groupbox>
		<groupbox id="tryView" mold="3d" open="false" width="100%">
			<caption label="Source"></caption>
			<textbox id="codeView" class="code" rows="10" width="100%" use="org.zkoss.zss.demo.CodeView" readonly="true">
				<attribute name="value"><![CDATA[
<window>
	<button label="Generate the report" onClick="listData();"/>
	<spreadsheet id="report" src="/WEB-INF/xls/demo/report.xls" maxrows="40" maxcolumns="10" height="400px" width="98%"/>
	<zscript>
		import org.zkoss.zss.demo.*;
		import org.apache.poi.ss.usermodel.*;
		import org.apache.poi.ss.util.*;
		import org.zkoss.zss.ui.impl.*;

		var book = report.book;
		var sheet = book.getSheet("Report");

		void listData() {

			//Initial data
			List data = new ReportProvider().queryComputerBean();
			
			//Call the method to copy template
			copyTemplate(1, 6, 1, 5, 6, data.size());
			
			//Call the method to fill data
			fillData(data);

			//Resize Spreadsheet 
			report.maxrows = 6 * data.size();
		}
		void copyTemplate(int left, int right, int top, int bottom, int space, int length) {
			//Get the template by Name
			Name namerange = book.getName("Template");
			AreaReference arearef = new AreaReference(namerange.getRefersToFormula());
			CellReference topLeft = arearef.getFirstCell();
			CellReference botRight = arearef.getLastCell();
			
			Sheet tsheet = book.getSheet(topLeft.getSheetName());
			Range range = Utils.getRange(tsheet, topLeft.getRow(), topLeft.getCol(), botRight.getRow(), botRight.getCol());
			
			for(int i = 0; i &lt; length; i++) {
				//Copy to new position
				range.copy(Utils.getRange(sheet, top + i * space, left, bottom + i * space, right));
			}
		}
		
		void fillData(List data) {
			for(int i = 0; i &lt; data.size(); i++) {
				ComputerBean computerBean = (ComputerBean)data.get(i);
				
				//Set values of new cells
				Utils.setCellValue(sheet, 1+i*6, 1, Integer.valueOf(i+1));
				Utils.setCellValue(sheet, 2+i*6, 2, computerBean.getId());
				Utils.setCellValue(sheet, 3+i*6, 2, computerBean.getModel());
				Utils.setCellValue(sheet, 4+i*6, 2, computerBean.getWarrantyTime());
				Utils.setCellValue(sheet, 5+i*6, 2, Double.valueOf(computerBean.getSalvage()));
				Utils.setCellValue(sheet, 2+i*6, 4, computerBean.getProduct());
				Utils.setCellValue(sheet, 3+i*6, 4, computerBean.getSerialNumber());
				Utils.setCellValue(sheet, 4+i*6, 4, computerBean.getOs());
				Utils.setCellValue(sheet, 2+i*6, 6, computerBean.getBrand());
				Utils.setCellValue(sheet, 3+i*6, 6, computerBean.getDate());
				Utils.setCellValue(sheet, 4+i*6, 6, Double.valueOf(computerBean.getCost()));
			}
		}
	</zscript>
</window>
				]]></attribute>
			</textbox>
		</groupbox>
	</vbox>
</window>